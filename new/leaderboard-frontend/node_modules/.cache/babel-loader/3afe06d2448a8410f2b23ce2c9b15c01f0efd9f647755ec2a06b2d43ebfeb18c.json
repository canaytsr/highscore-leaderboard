{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\new\\\\leaderboard-frontend\\\\src\\\\UpdateScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button } from 'primereact/button';\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Toast } from \"primereact/toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst UpdateScore = () => {\n  _s();\n  const [players, setPlayers] = useState([]); // Oyuncu listesi\n  const [playerId, setPlayerId] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const toast = useRef(null);\n\n  // 📌 Oyuncu Listesini API'den Çek\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n  const fetchPlayers = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/leaderboard`);\n      const data = await response.json();\n      setPlayers(data.map(p => ({\n        label: p.name,\n        value: p.id\n      }))); // Dropdown için uygun format\n    } catch (error) {\n      console.error(\"❌ Error fetching players:\", error);\n    }\n  };\n\n  // 🎯 Skor Güncelleme Fonksiyonu\n  const updateScore = async () => {\n    if (!playerId || amount <= 0) {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Warning\",\n        detail: \"Please enter valid player and amount!\",\n        life: 3000\n      });\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/reset/updateScore`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          playerId,\n          amount\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to update score\");\n      toast.current.show({\n        severity: \"success\",\n        summary: \"Success\",\n        detail: \"Score updated successfully!\",\n        life: 3000\n      });\n      fetchPlayers(); // Güncellenmiş oyuncu listesini çek\n    } catch (error) {\n      console.error(\"❌ Error updating score:\", error);\n      toast.current.show({\n        severity: \"error\",\n        summary: \"Error\",\n        detail: \"❌ Failed to update score.\",\n        life: 3000\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFAF Update Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: playerId,\n      options: players // API'den çekilen oyuncu listesi\n      ,\n      onChange: e => setPlayerId(e.value),\n      placeholder: \"Select a player\",\n      className: \"p-dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n      value: amount,\n      onValueChange: e => setAmount(e.value),\n      mode: \"decimal\",\n      placeholder: \"Enter amount\",\n      className: \"p-inputnumber\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Update Score\",\n      icon: \"pi pi-plus\",\n      className: \"p-button-success\",\n      onClick: updateScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateScore, \"7SgwDym7nyvm3oW5rSGj5HQ1TlA=\");\n_c = UpdateScore;\nexport default UpdateScore;\nvar _c;\n$RefreshReg$(_c, \"UpdateScore\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","InputNumber","Dropdown","Toast","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","UpdateScore","_s","players","setPlayers","playerId","setPlayerId","amount","setAmount","toast","fetchPlayers","response","fetch","data","json","map","p","label","name","value","id","error","console","updateScore","current","show","severity","summary","detail","life","method","headers","body","JSON","stringify","ok","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","options","onChange","e","placeholder","onValueChange","mode","icon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/new/leaderboard-frontend/src/UpdateScore.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from 'primereact/button';\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Toast } from \"primereact/toast\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst UpdateScore = () => {\r\n  const [players, setPlayers] = useState([]); // Oyuncu listesi\r\n  const [playerId, setPlayerId] = useState(null);\r\n  const [amount, setAmount] = useState(0);\r\n  const toast = useRef(null);\r\n\r\n  // 📌 Oyuncu Listesini API'den Çek\r\n  useEffect(() => {\r\n    fetchPlayers();\r\n  }, []);\r\n\r\n  const fetchPlayers = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/leaderboard`);\r\n      const data = await response.json();\r\n      setPlayers(data.map(p => ({ label: p.name, value: p.id }))); // Dropdown için uygun format\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching players:\", error);\r\n    }\r\n  };\r\n\r\n  // 🎯 Skor Güncelleme Fonksiyonu\r\n  const updateScore = async () => {\r\n    if (!playerId || amount <= 0) {\r\n      toast.current.show({ severity: \"warn\", summary: \"Warning\", detail: \"Please enter valid player and amount!\", life: 3000 });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/reset/updateScore`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ playerId, amount }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to update score\");\r\n\r\n      toast.current.show({ severity: \"success\", summary: \"Success\", detail: \"Score updated successfully!\", life: 3000 });\r\n\r\n      fetchPlayers(); // Güncellenmiş oyuncu listesini çek\r\n    } catch (error) {\r\n      console.error(\"❌ Error updating score:\", error);\r\n      toast.current.show({ severity: \"error\", summary: \"Error\", detail: \"❌ Failed to update score.\", life: 3000 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>🎯 Update Score</h1>\r\n\r\n      <Toast ref={toast} />\r\n\r\n      {/* 🔹 Oyuncu Seçimi */}\r\n      <Dropdown\r\n        value={playerId}\r\n        options={players} // API'den çekilen oyuncu listesi\r\n        onChange={(e) => setPlayerId(e.value)}\r\n        placeholder=\"Select a player\"\r\n        className=\"p-dropdown\"\r\n      />\r\n\r\n      {/* 🔹 Skor Artırma */}\r\n      <InputNumber\r\n        value={amount}\r\n        onValueChange={(e) => setAmount(e.value)}\r\n        mode=\"decimal\"\r\n        placeholder=\"Enter amount\"\r\n        className=\"p-inputnumber\"\r\n      />\r\n\r\n      <Button label=\"Update Score\" icon=\"pi pi-plus\" className=\"p-button-success\" onClick={updateScore} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateScore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}