{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\New folder\\\\highscore-leaderboard\\\\leaderboard-frontend\\\\src\\\\UpdateScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button } from 'primereact/button';\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Toast } from \"primereact/toast\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst UpdateScore = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [playerId, setPlayerId] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const toast = useRef(null);\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n  const fetchPlayers = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/leaderboard`);\n      const data = await response.json();\n      setPlayers(data.map(p => ({\n        label: `${p.username} (${p.name} ${p.surname})`,\n        value: p.id\n      })));\n    } catch (error) {\n      console.error(\"❌ Error fetching players:\", error);\n    }\n  };\n  const updateScore = async () => {\n    if (!playerId || amount <= 0) {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Warning\",\n        detail: \"Please enter valid player and amount!\",\n        life: 3000\n      });\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/reset/updateScore`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          playerId,\n          amount\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to update score\");\n      toast.current.show({\n        severity: \"success\",\n        summary: \"Success\",\n        detail: \"Score updated successfully!\",\n        life: 3000\n      });\n      fetchPlayers();\n    } catch (error) {\n      console.error(\"❌ Error updating score:\", error);\n      toast.current.show({\n        severity: \"error\",\n        summary: \"Error\",\n        detail: \"❌ Failed to update score.\",\n        life: 3000\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFAF Update Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-containerUpdate\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        value: playerId,\n        options: players,\n        onChange: e => setPlayerId(e.value),\n        placeholder: \" Select a player \",\n        className: \"p-dropdown2\",\n        filter: true,\n        showClear: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n        value: amount,\n        onValueChange: e => setAmount(e.value),\n        mode: \"decimal\",\n        placeholder: \"Enter amount\",\n        className: \"p-inputnumber2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Update Score\",\n        icon: \"pi pi-save\",\n        className: \"submit-button2\",\n        onClick: updateScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateScore, \"7SgwDym7nyvm3oW5rSGj5HQ1TlA=\");\n_c = UpdateScore;\nexport default UpdateScore;\nvar _c;\n$RefreshReg$(_c, \"UpdateScore\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","InputNumber","Dropdown","Toast","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","UpdateScore","_s","players","setPlayers","playerId","setPlayerId","amount","setAmount","toast","fetchPlayers","response","fetch","data","json","map","p","label","username","name","surname","value","id","error","console","updateScore","current","show","severity","summary","detail","life","method","headers","body","JSON","stringify","ok","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","options","onChange","e","placeholder","filter","showClear","onValueChange","mode","icon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/New folder/highscore-leaderboard/leaderboard-frontend/src/UpdateScore.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"; \r\nimport { Button } from 'primereact/button';\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport './App.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst UpdateScore = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [playerId, setPlayerId] = useState(null);\r\n  const [amount, setAmount] = useState(0);\r\n  const toast = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchPlayers();\r\n  }, []);\r\n\r\n  const fetchPlayers = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/leaderboard`);\r\n      const data = await response.json();\r\n\r\n      setPlayers(data.map(p => ({ label: `${p.username} (${p.name} ${p.surname})`, value: p.id })));\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching players:\", error);\r\n    }\r\n  };\r\n\r\n  const updateScore = async () => {\r\n    if (!playerId || amount <= 0) {\r\n      toast.current.show({ severity: \"warn\", summary: \"Warning\", detail: \"Please enter valid player and amount!\", life: 3000 });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/reset/updateScore`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ playerId, amount }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to update score\");\r\n\r\n      toast.current.show({ severity: \"success\", summary: \"Success\", detail: \"Score updated successfully!\", life: 3000 });\r\n\r\n      fetchPlayers();\r\n    } catch (error) {\r\n      console.error(\"❌ Error updating score:\", error);\r\n      toast.current.show({ severity: \"error\", summary: \"Error\", detail: \"❌ Failed to update score.\", life: 3000 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"leaderboard-header\">\r\n        <h1>🎯 Update Score</h1>\r\n      </div>\r\n\r\n      <Toast ref={toast} />\r\n\r\n      {/* Form Container */}\r\n      <div className=\"form-containerUpdate\">\r\n        {/* 🔹 Oyuncu Seçimi */}\r\n        <Dropdown\r\n          value={playerId}\r\n          options={players}\r\n          onChange={(e) => setPlayerId(e.value)}\r\n          placeholder=\" Select a player \"\r\n          className=\"p-dropdown2\"\r\n          filter\r\n          showClear\r\n        />\r\n\r\n        {/* 🔹 Skor Artırma */}\r\n        <InputNumber\r\n          value={amount}\r\n          onValueChange={(e) => setAmount(e.value)}\r\n          mode=\"decimal\"\r\n          placeholder=\"Enter amount\"\r\n          className=\"p-inputnumber2\"\r\n        />\r\n\r\n        {/* 🔹 Skor Güncelleme Butonu */}\r\n        <Button \r\n          label=\"Update Score\" \r\n          icon=\"pi pi-save\" \r\n          className=\"submit-button2\" \r\n          onClick={updateScore} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateScore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}