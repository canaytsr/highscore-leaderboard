{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\new\\\\leaderboard-frontend\\\\src\\\\UpdateScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Toast } from 'primereact/toast';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateScore = () => {\n  _s();\n  const [playerId, setPlayerId] = useState(null);\n  const [money, setMoney] = useState(null);\n  const [toast, setToast] = useState(null);\n\n  // Toast durumunu sadece gerekli olduğunda güncelle\n  const showToast = (severity, summary, detail) => {\n    setToast({\n      severity,\n      summary,\n      detail\n    });\n  };\n  const handlePlayerIdChange = e => {\n    setPlayerId(e.value);\n  };\n  const handleMoneyChange = e => {\n    setMoney(e.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!playerId || !money) {\n      showToast('error', 'Error', 'Player ID and Money are required!');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/updateScore', {\n        playerId,\n        money\n      });\n      showToast('success', 'Success', response.data);\n    } catch (error) {\n      showToast('error', 'Error', 'Failed to update score.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-fluid p-formgrid p-grid\",\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: el => setToast(el)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"p-col-12\",\n      children: \"Update Player Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-field p-col-12 p-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerId\",\n        children: \"Player ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n        id: \"playerId\",\n        value: playerId,\n        onValueChange: handlePlayerIdChange,\n        showButtons: true,\n        min: 1,\n        max: 1000000,\n        required: true,\n        className: \"p-inputtext-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-field p-col-12 p-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"money\",\n        children: \"Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n        id: \"money\",\n        value: money,\n        onValueChange: handleMoneyChange,\n        showButtons: true,\n        min: 0,\n        required: true,\n        className: \"p-inputtext-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Update Score\",\n        icon: \"pi pi-check\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateScore, \"m3pOSXEvt/1CUE+Lv1i8YqWFupQ=\");\n_c = UpdateScore;\nexport default UpdateScore;\nvar _c;\n$RefreshReg$(_c, \"UpdateScore\");","map":{"version":3,"names":["React","useState","Toast","InputNumber","Button","axios","jsxDEV","_jsxDEV","UpdateScore","_s","playerId","setPlayerId","money","setMoney","toast","setToast","showToast","severity","summary","detail","handlePlayerIdChange","e","value","handleMoneyChange","handleSubmit","preventDefault","response","post","data","error","className","children","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onValueChange","showButtons","min","max","required","label","icon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/new/leaderboard-frontend/src/UpdateScore.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Button } from 'primereact/button';\r\nimport axios from 'axios';\r\n\r\nconst UpdateScore = () => {\r\n  const [playerId, setPlayerId] = useState(null);\r\n  const [money, setMoney] = useState(null);\r\n  const [toast, setToast] = useState(null);\r\n\r\n  // Toast durumunu sadece gerekli olduğunda güncelle\r\n  const showToast = (severity, summary, detail) => {\r\n    setToast({\r\n      severity,\r\n      summary,\r\n      detail,\r\n    });\r\n  };\r\n\r\n  const handlePlayerIdChange = (e) => {\r\n    setPlayerId(e.value);\r\n  };\r\n\r\n  const handleMoneyChange = (e) => {\r\n    setMoney(e.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!playerId || !money) {\r\n      showToast('error', 'Error', 'Player ID and Money are required!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/updateScore', {\r\n        playerId,\r\n        money,\r\n      });\r\n      showToast('success', 'Success', response.data);\r\n    } catch (error) {\r\n      showToast('error', 'Error', 'Failed to update score.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-fluid p-formgrid p-grid\">\r\n      <Toast ref={(el) => setToast(el)} />\r\n      <h2 className=\"p-col-12\">Update Player Score</h2>\r\n      \r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"playerId\">Player ID</label>\r\n        <InputNumber\r\n          id=\"playerId\"\r\n          value={playerId}\r\n          onValueChange={handlePlayerIdChange}\r\n          showButtons\r\n          min={1}\r\n          max={1000000}\r\n          required\r\n          className=\"p-inputtext-sm\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"money\">Money</label>\r\n        <InputNumber\r\n          id=\"money\"\r\n          value={money}\r\n          onValueChange={handleMoneyChange}\r\n          showButtons\r\n          min={0}\r\n          required\r\n          className=\"p-inputtext-sm\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"p-col-12\">\r\n        <Button label=\"Update Score\" icon=\"pi pi-check\" onClick={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateScore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}