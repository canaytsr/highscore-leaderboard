{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\new\\\\leaderboard-frontend\\\\src\\\\Winners.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst Winners = () => {\n  _s();\n  const [winners, setWinners] = useState([]);\n  useEffect(() => {\n    fetchWinners();\n  }, []);\n  const fetchWinners = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/winners`);\n      const data = await response.json();\n      setWinners(data);\n    } catch (error) {\n      console.error(\"‚ùå Error fetching winners:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFC6 Weekly Winners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      value: winners,\n      paginator: true,\n      rows: 10,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"Player ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"name\",\n        header: \"Player Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"money\",\n        header: \"Prize Money\",\n        body: rowData => `$${rowData.money}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Winners, \"vIIsh8jOFIYcYfL6xKcTgQO2TgM=\");\n_c = Winners;\nexport default Winners;\nvar _c;\n$RefreshReg$(_c, \"Winners\");","map":{"version":3,"names":["React","useEffect","useState","DataTable","Column","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","Winners","_s","winners","setWinners","fetchWinners","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","paginator","rows","field","header","body","rowData","money","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/new/leaderboard-frontend/src/Winners.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst Winners = () => {\r\n  const [winners, setWinners] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchWinners();\r\n  }, []);\r\n\r\n  const fetchWinners = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/winners`);\r\n      const data = await response.json();\r\n      setWinners(data);\r\n    } catch (error) {\r\n      console.error(\"‚ùå Error fetching winners:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>üèÜ Weekly Winners</h1>\r\n      <DataTable value={winners} paginator rows={10}>\r\n        <Column field=\"id\" header=\"Player ID\" />\r\n        <Column field=\"name\" header=\"Player Name\" />\r\n        <Column field=\"money\" header=\"Prize Money\" body={(rowData) => `$${rowData.money}`} />\r\n      </DataTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Winners;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdc,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,YAAY,UAAU,CAAC;MACvD,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,UAAU,CAACI,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA,CAACH,SAAS;MAACyB,KAAK,EAAEf,OAAQ;MAACgB,SAAS;MAACC,IAAI,EAAE,EAAG;MAAAP,QAAA,gBAC5CjB,OAAA,CAACF,MAAM;QAAC2B,KAAK,EAAC,IAAI;QAACC,MAAM,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCrB,OAAA,CAACF,MAAM;QAAC2B,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC;MAAa;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CrB,OAAA,CAACF,MAAM;QAAC2B,KAAK,EAAC,OAAO;QAACC,MAAM,EAAC,aAAa;QAACC,IAAI,EAAGC,OAAO,IAAK,IAAIA,OAAO,CAACC,KAAK;MAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}