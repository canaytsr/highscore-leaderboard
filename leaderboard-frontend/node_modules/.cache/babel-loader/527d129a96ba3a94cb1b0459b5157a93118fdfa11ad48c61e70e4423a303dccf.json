{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\new\\\\leaderboard-frontend\\\\src\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Toast } from \"primereact/toast\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { AutoComplete } from \"primereact/autocomplete\"; // âœ… AutoComplete ekledik\nimport \"./App.css\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"All\");\n  const [suggestions, setSuggestions] = useState([]); // âœ… AutoComplete iÃ§in Ã¶neriler\n  const toast = useRef(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/leaderboard\").then(res => res.json()).then(data => {\n      setPlayers(data);\n    }).catch(err => {\n      console.error(\"Fetch error:\", err);\n      toast.current.show({\n        severity: \"error\",\n        summary: \"Error\",\n        detail: \"An error occurred while fetching data.\"\n      });\n    });\n  }, []);\n  const countries = [\"All\", ...new Set(players.map(player => player.country))];\n  const onSearchChange = e => {\n    setSearch(e.target.value);\n  };\n  const onCountryChange = e => {\n    setSelectedCountry(e.value);\n  };\n\n  // AutoComplete iÃ§in Ã¼lke filtresini de dikkate al\n  const onSearchInput = event => {\n    const query = event.query.toLowerCase();\n    const filteredPlayers = players.filter(player => player.name.toLowerCase().includes(query) && (selectedCountry === \"All\" || player.country === selectedCountry) // Ãœlke filtresini uygula\n    );\n    const filteredSuggestions = filteredPlayers.map(player => player.name);\n    setSuggestions(filteredSuggestions);\n  };\n  const filteredPlayers = players.filter(player => player.name.toLowerCase().includes(search.toLowerCase()) && (selectedCountry === \"All\" || player.country === selectedCountry));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n        value: search,\n        suggestions: suggestions,\n        completeMethod: onSearchInput,\n        onChange: e => setSearch(e.value),\n        placeholder: \"Search player...\",\n        className: \"p-autocomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: selectedCountry,\n        options: countries.map(country => ({\n          label: country,\n          value: country\n        })),\n        onChange: onCountryChange,\n        placeholder: \"Filter by Country\",\n        className: \"p-dropdown-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        value: filteredPlayers,\n        paginator: true,\n        rows: 10,\n        reorderableColumns: true,\n        responsiveLayout: \"scroll\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"name\",\n          header: \"Player Name\",\n          sortable: true,\n          reorderable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"country\",\n          header: \"Country\",\n          sortable: true,\n          reorderable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"money\",\n          header: \"Money\",\n          sortable: true,\n          reorderable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"fHr5a9rUI5G5bf1nbvU9Syngv6U=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Toast","DataTable","Column","InputText","Dropdown","AutoComplete","jsxDEV","_jsxDEV","Leaderboard","_s","players","setPlayers","search","setSearch","selectedCountry","setSelectedCountry","suggestions","setSuggestions","toast","fetch","then","res","json","data","catch","err","console","error","current","show","severity","summary","detail","countries","Set","map","player","country","onSearchChange","e","target","value","onCountryChange","onSearchInput","event","query","toLowerCase","filteredPlayers","filter","name","includes","filteredSuggestions","children","className","fileName","_jsxFileName","lineNumber","columnNumber","completeMethod","onChange","placeholder","options","label","paginator","rows","reorderableColumns","responsiveLayout","field","header","sortable","reorderable","ref","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/new/leaderboard-frontend/src/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { AutoComplete } from \"primereact/autocomplete\"; // âœ… AutoComplete ekledik\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\n\r\nconst Leaderboard = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedCountry, setSelectedCountry] = useState(\"All\");\r\n  const [suggestions, setSuggestions] = useState([]); // âœ… AutoComplete iÃ§in Ã¶neriler\r\n  const toast = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/leaderboard\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPlayers(data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Fetch error:\", err);\r\n        toast.current.show({\r\n          severity: \"error\",\r\n          summary: \"Error\",\r\n          detail: \"An error occurred while fetching data.\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const countries = [\"All\", ...new Set(players.map((player) => player.country))];\r\n\r\n  const onSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const onCountryChange = (e) => {\r\n    setSelectedCountry(e.value);\r\n  };\r\n\r\n  // AutoComplete iÃ§in Ã¼lke filtresini de dikkate al\r\nconst onSearchInput = (event) => {\r\n  const query = event.query.toLowerCase();\r\n  const filteredPlayers = players.filter((player) =>\r\n    player.name.toLowerCase().includes(query) &&\r\n    (selectedCountry === \"All\" || player.country === selectedCountry) // Ãœlke filtresini uygula\r\n  );\r\n\r\n  const filteredSuggestions = filteredPlayers.map((player) => player.name);\r\n  setSuggestions(filteredSuggestions);\r\n};\r\n\r\n\r\n  const filteredPlayers = players.filter(\r\n    (player) =>\r\n      player.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      (selectedCountry === \"All\" || player.country === selectedCountry)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"leaderboard-header\">\r\n        <h1>Leaderboard</h1>\r\n      </div>\r\n\r\n      <div className=\"filters\">\r\n        {/* ðŸ”¹ 4. Otomatik tamamlama arama kutusu */}\r\n        <AutoComplete\r\n          value={search}\r\n          suggestions={suggestions}\r\n          completeMethod={onSearchInput}\r\n          onChange={(e) => setSearch(e.value)}\r\n          placeholder=\"Search player...\"\r\n          className=\"p-autocomplete\"\r\n        />\r\n\r\n        <Dropdown\r\n          value={selectedCountry}\r\n          options={countries.map((country) => ({ label: country, value: country }))}\r\n          onChange={onCountryChange}\r\n          placeholder=\"Filter by Country\"\r\n          className=\"p-dropdown-sm\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"table-container\">\r\n        <DataTable value={filteredPlayers} paginator rows={10} reorderableColumns responsiveLayout=\"scroll\">\r\n          <Column field=\"name\" header=\"Player Name\" sortable reorderable />\r\n          <Column field=\"country\" header=\"Country\" sortable reorderable />\r\n          <Column field=\"money\" header=\"Money\" sortable reorderable />\r\n        </DataTable>\r\n      </div>\r\n\r\n      <Toast ref={toast} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}